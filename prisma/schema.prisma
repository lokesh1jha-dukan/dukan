generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model addresses {
  id            Int       @id @default(autoincrement())
  user_id       Int?
  address_line1 String?   @db.VarChar(255)
  address_line2 String?   @db.VarChar(255)
  city          String?   @db.VarChar(255)
  state         String?   @db.VarChar(255)
  country       String?   @db.VarChar(255)
  postal_code   String?   @db.VarChar(20)
  created_at    DateTime? @default(now()) @db.Timestamp(6)
  updated_at    DateTime? @db.Timestamp(6)
  users         users?    @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model auth_requests {
  id           Int       @id @default(autoincrement())
  status       String    @default("draft") @db.VarChar(255)
  date_created DateTime? @db.Timestamptz(6)
  date_updated DateTime? @db.Timestamptz(6)
  hashed_otp   String?   @db.VarChar(255)
  email        String?   @db.VarChar(255)
  action       String?   @db.VarChar(255)
}

model cart {
  id            Int       @id @default(autoincrement())
  user_id       Int?
  product_id    Int?
  cart_quantity Int?
  created_at    DateTime? @default(now()) @db.Timestamp(6)
  updated_at    DateTime? @db.Timestamp(6)
  quantity_id   Int?
  products      products? @relation(fields: [product_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  users         users?    @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  quantity      quantity? @relation(fields: [quantity_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_quantity_id")
}

model categories {
  id         Int        @id @default(autoincrement())
  name       String?    @db.VarChar(255)
  created_at DateTime?  @default(now()) @db.Timestamp(6)
  updated_at DateTime?  @db.Timestamp(6)
  products   products[]
}


model order_items {
  id               Int       @id @default(autoincrement())
  order_id         Int?
  product_id       Int?
  quantity         Int?
  price_per_unit   Decimal?  @db.Decimal
  created_at       DateTime? @default(now()) @db.Timestamp(6)
  updated_at       DateTime? @db.Timestamp(6)
  product_name     String?   @db.VarChar(255)
  product_quantity String?   @db.VarChar(50)
  orders           orders?   @relation(fields: [order_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  products         products? @relation(fields: [product_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model orders {
  id           Int           @id @default(autoincrement())
  user_id      Int?
  order_date   DateTime?     @db.Timestamp(6)
  total_amount Decimal?      @db.Decimal
  status       String?       @db.VarChar(255)
  created_at   DateTime?     @default(now()) @db.Timestamp(6)
  updated_at   DateTime?     @db.Timestamp(6)
  address_id   Int?
  full_address String?
  order_items  order_items[]
  users        users?        @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  payments     payments[]
}

model payments {
  id             Int       @id @default(autoincrement())
  user_id        Int?
  order_id       Int?
  payment_date   DateTime? @db.Timestamp(6)
  payment_method String?   @db.VarChar(255)
  amount         Decimal?  @db.Decimal
  created_at     DateTime? @default(now()) @db.Timestamp(6)
  updated_at     DateTime? @db.Timestamp(6)
  orders         orders?   @relation(fields: [order_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  users          users?    @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model products {
  id                                     Int             @id @default(autoincrement())
  name                                   String?         @db.VarChar(255)
  description                            String?
  category_id                            Int?
  created_at                             DateTime?       @default(now()) @db.Timestamp(6)
  updated_at                             DateTime?       @db.Timestamp(6)
  image                                  String?         @db.Uuid
  cart                                   cart[]
  order_items                            order_items[]
  categories                             categories?     @relation(fields: [category_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  quantity_quantity_product_idToproducts quantity[]      @relation("quantity_product_idToproducts")
}

model quantity {
  id                                     Int       @id @default(autoincrement())
  product_id                             Int?
  quantity                               String?   @db.VarChar
  price                                  String?   @db.VarChar(255)
  is_stock_available                     Int?
  stocked_quantity                       Int?
  created_at                             DateTime? @default(now()) @db.Timestamp(6)
  updated_at                             DateTime? @default(now()) @db.Timestamp(6)
  cart                                   cart[]
  products_quantity_product_idToproducts products? @relation("quantity_product_idToproducts", fields: [product_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model users {
  id            Int         @id @default(autoincrement())
  username      String?     @db.VarChar(255)
  email         String?     @unique @db.VarChar(255)
  password_hash String?     @db.VarChar(255)
  created_at    DateTime?   @default(now()) @db.Timestamp(6)
  last_login    DateTime?   @db.Timestamp(6)
  updated_at    DateTime?   @db.Timestamp(6)
  addresses     addresses[]
  cart          cart[]
  orders        orders[]
  payments      payments[]
}
